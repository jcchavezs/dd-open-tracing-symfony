services:
  dd_opentracing.http_client:
    class: GuzzleHttp\Client

  dd_opentracing.event_bus:
    alias: event_bus

  dd_opentracing.logger:
    alias: logger

  dd_opentracing.encoder_factory:
    class: "%dd_opentracing.encoder_factory%"

  dd_opentracing.transport.http:
    class: DdTrace\Transports\Http
    arguments:
      - "@dd_opentracing.http_client"
      - "@dd_opentracing.logger"
      - "@dd_opentracing.encoder_factory"
      - "%dd_opentracing.datadog.service_url%"

  dd_opentracing.transport.noop:
    class: DdTrace\Transports\Noop

  dd_opentracing.transport_factory:
    class: "%dd_opentracing.transport_factory%"

  dd_opentracing.transport:
    class: DdTrace\Transports\Noop
    factory: ["@dd_opentracing.transport_factory", "build"]

  dd_opentracing.tracing_starter:
    class: DdOpenTracingBundle\Listeners\TracingStarter
    arguments:
      - "@event_dispatcher"
      - "@dd_opentracing.tracer"
      - "%kernel.environment%"
    tags:
      - { name: kernel.event_listener, event: kernel.controller }

  dd_opentracing.tracing_terminator:
    class: DdOpenTracingBundle\Listeners\TracingTerminator
    arguments:
      - "@dd_opentracing.tracer"
      - "@dd_opentracing.event_bus"
    tags:
      - { name: kernel.event_listener, event: kernel.terminate }
      - { name: kernel.event_listener, event: kernel.exception }

  dd_opentracing.tracer_factory:
    class: DdOpenTracingBundle\Tracers\TracerFactory
    arguments:
      - "@dd_opentracing.logger"
      - "@dd_opentracing.http_client"
      - "@dd_opentracing.encoder_factory"
      - "@dd_opentracing.transport"

  dd_opentracing.tracer:
    class: DdOpenTracing\Tracer
    factory: ["@dd_opentracing.tracer_factory", "build"]

  dd_opentracing.listener.tracer_flusher:
    class: DdOpenTracingBundle\Listeners\TracingFlusher
    arguments:
      - "@dd_opentracing.logger"
    tags:
        - { name: event_subscriber, subscribes_to: DdOpenTracingBundle\Events\TracingTerminated }